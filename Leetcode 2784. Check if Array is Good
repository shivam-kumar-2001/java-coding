You are given an integer array nums. We consider an array good if it is a permutation of an array base[n].
base[n] = [1, 2, ..., n - 1, n, n] (in other words, it is an array of length n + 1 which contains 1 to n - 1 exactly once, plus two occurrences of n).
For example, base[1] = [1, 1] and base[3] = [1, 2, 3, 3].
Return true if the given array is good, otherwise return false.

class Solution {
    public boolean isGood(int[] nums) {
        Arrays.sort(nums);
        int maxi=nums[nums.length-1];
        if(nums.length!=maxi+1)
        {
            return false;
        }
        for(int i=1;i<=maxi;i++)
        {
            if(nums[i-1]!=i)
            {
                return false;
            }
        }
        if(nums[nums.length-1]!=maxi)
        {
            return false;
        }
        return true;
    }
}
